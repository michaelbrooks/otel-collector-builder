name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION"

      - uses: danielr1996/envsubst-action@1.0.0
        with:
          input: manifest.yaml.tpl
          output: dist/manifest.yaml

      - name: Install OpenTelemetry Collector Builder
        run: |
          go install go.opentelemetry.io/collector/cmd/builder@v0.129.0

      # Build for amd64
      - name: Build for amd64
        env:
          GOOS: linux
          GOARCH: amd64
        run: |
          builder --config=dist/manifest.yaml
          mkdir -p dist/amd64
          mv dist/otelcol dist/amd64/otelcol-${{ steps.version.outputs.version }}-linux-amd64

      # Build for arm64
      - name: Build for arm64
        env:
          GOOS: linux
          GOARCH: arm64
        run: |
          builder --config=dist/manifest.yaml
          mkdir -p dist/arm64
          mv dist/otelcol dist/arm64/otelcol-${{ steps.version.outputs.version }}-linux-arm64

      # Set up Docker Buildx for multi-arch builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # # Extract metadata for Docker
      # - name: Extract metadata for Docker
      #   id: meta
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: ghcr.io/${{ github.repository_owner }}/otelcol
      #     tags: |
      #       type=semver,pattern={{version}}
      #       type=semver,pattern={{major}}.{{minor}}
      #       type=semver,pattern={{major}}
      #       type=sha

      # # Build and push Docker image
      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     platforms: linux/amd64,linux/arm64
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
      #     build-args: |
      #       VERSION=${{ steps.version.outputs.version }}

      # Create GitHub Release
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/amd64/otelcol-${{ steps.version.outputs.version }}-linux-amd64
            dist/arm64/otelcol-${{ steps.version.outputs.version }}-linux-arm64
          draft: false
          prerelease: false
          body: |
            ## OpenTelemetry Collector Custom Distribution v${{ steps.version.outputs.version }}
            
            ### Binaries
            - [otelcol-${{ steps.version.outputs.version }}-linux-amd64](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/otelcol-${{ steps.version.outputs.version }}-linux-amd64)
            - [otelcol-${{ steps.version.outputs.version }}-linux-arm64](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/otelcol-${{ steps.version.outputs.version }}-linux-arm64)
            
            Available architectures: linux/amd64, linux/arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}